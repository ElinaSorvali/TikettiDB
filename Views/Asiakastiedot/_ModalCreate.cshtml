@model TikettiDB.Models.Asiakastiedot

@*Scripti salasanojen tarkistukseen*@
<script>
    document.querySelector("form").addEventListener("submit", function (event) {
        var password = document.getElementById("Salasana").value;
        var confirmPassword = document.getElementById("ConfirmPassword").value;

        if (password !== confirmPassword) {
            event.preventDefault(); // Estää lomakkeen lähettämisen
            alert("Salasanat eivät täsmää!");
        }
    });
</script>


<div class="modal fade" id="uudetAsiakastiedotCreate">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="bg-img">
                @*Tässä on taustakuva*@
                <div class="modal-header">
                    <h2>Luo uusi asiakas</h2>
                </div>
                <div class="modal-body">


                    @using (Html.BeginForm("Create", "Asiakastiedot", FormMethod.Post, new { id = "createForm" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Etunimi, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Etunimi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Etunimi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sukunimi, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Sukunimi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sukunimi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Puhelinnro, "Puhelinnumero", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Puhelinnro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Puhelinnro, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Osoite, "Osoite", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Osoite, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Osoite, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Postinro, "Postinumero", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Postinro, (IEnumerable<SelectListItem>)ViewBag.Postinro, " ", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Postinro, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sahkoposti, "Sähköposti", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Sahkoposti, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sahkoposti, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Salasana, "Salasana", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Salasana, new { htmlAttributes = new { @class = "form-control", autocomplete = "new-password" } })
                                @Html.ValidationMessageFor(model => model.Salasana, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, "Vahvista salasana", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <label class="text-danger">
                            @Html.DisplayFor(model => model.ErrorMessage)
                        </label>

                        <div class="modal-footer">
                            <div>
                                @*Formin lähettävä button, joka ei kuitenkaan ole formin sisällä, mutta viittaa formin ID:hen*@
                                <button type="submit" class="btn btn-success" form="createForm"><i class="fas fa-check"></i></button>
                                @*Kontrollerin kutsu Url.Action -komennolla, jotta peruuttaminen johtaa alkutilanteeseen*@
                                <a href="@Url.Action("Index", "Asiakastiedot")" class="btn btn-primary"><i class="fas fa-times"></i></a>
                            </div>
                        </div>
                    </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>